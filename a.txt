1.	在Pavel更新了3.1.1章的配对事件结构之后，我们在FS中加入了HCC的原始需求与当前结构之间的映射关系来进行确认


2.	在第4.1.1.2章{ADD}为配对变更通知存储事件数据，它说:
	1.	当任何输入的付款是成对或不成对时，系统会记录配对更改通知事件。
	2.	对于一个收到的付款(对于所有受影响的契约)，数据(配对和取消配对)都包含在一个消息中。
	3.系统调用用例{Publish pi change}来处理创建的记录。
	4.	用例结束。
	下面的场景可能吗?例子:在同一个合同中，相同的付款金额未配对，然后再配对。
	
	我们应该有两个“配对信息”，一个用于“配对”，另一个用于“取消配对”。
	在这些不同的“配对信息”中，它们有相同的“配对id”，但是不同的“配对状态”(“a”表示配对，“n”表示不配对)。是这样吗?
	但是在这个信息中只有一个“有效”，我们如何确认“配对”是第一个动作还是“取消配对”是第一个动作?

	是的，有可能。
	问题1:“pairingtId”也会有所不同。
	问题2:是的，" effectiveOn "是一样的，但是ID越大越晚。
		是的,取消配对是99.99%的第一步。
		没有逻辑上的理由在同一时刻配对然后取消配对付款。
3.
	基本上，“InstalmentInfo”与“PairingInfo”处于相同的层次结构中。
	但是从我们的角度来看，最好为分期付款创建一个独立的对象。
	你知道“PairingInfo”是关于配对的信息，“InstalmentInfo”是关于分期付款的信息。
	“PairingInfo”属性之一是“InstalmentInfo”。这就是现实。但是意思还是和你的一样。
	它只是想保持整洁。

4.这不是关于FS内容的问题，我们正在寻求您对我们数据加载问题的帮助。
我们与HCC开发人员进行了交谈，他们正在使用“分期id”来标识分期表中的特定行。
但是在那个表中有大量的分期付款id，为了匹配成对/非成对的分期付款记录而加载所有这些id对我们的系统来说是一笔巨大的开销。
我们想知道:是否存在结对/取消结对的默认条件，我们可以用它来减少分期记录的装载量?
例如，HOMER可能只会在最近5年内对合同进行配对，所以我们可以加载这个范围内的分期付款记录进行计算。或者，你对装货有什么建议吗?
	不，没有条件，也没有建议。我们有同样的性能问题。然而，非常老的分期付款结对并不常见。

5.我发现在UC的“配对放弃(礼物)付款”和“配对实际付款”中，您提到了一个规则“{确定配对优先级算法}”。
我知道这个规则与我们当前的消息需求无关。但是您可以与我们共享规则内容吗，
或者告诉我们哪些FS包含了它?这对我们下面的工行分股优先权分析有很大的帮助。
	嗯，配对的优先级是非常复杂的，有许多FS与这个主题有关。但是简化版本的优先级可以像附件一样。

6.	和第5项一样，“{Store overpayment}”和“{Generate Refund request from overpayment}”的UC内容能否分享给我们，或者告诉我们可以找到哪些FS ?
	我想我们已经讨论过超额付款的问题，但一般来说，如果有额外的款项，系统会为每笔额外付款设立一个新的分期付款，金额如下:
	-类型=多付(12)
	- number =最后一个活动的分期数+ 1
	-到期日=付款日期
	-价值=超额付款金额
	-版本=最后一个活动的分期版本
	关于退款，是任务RFCCN-2853。

关于Grace的评论:
•是的，这就是映射。
•嗯，这更像是一个技术观点……
1.	我不知道你说的频率是什么意思，它是连续工作的。
2.	任何错误都可能创建失败的消息，但它不是真正的消息。这只是Homer的一项记录。
3.我不这么认为。这将是一个“奇迹”。失败的消息因为无法发送而失败。
•是的，它必须被移除。